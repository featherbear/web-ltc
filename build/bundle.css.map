{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Entry.svelte",
    "Menubar.svelte",
    "TimecodeDisplay.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Menubar from \"./components/Menubar/Menubar.svelte\";\n\n  /* Routing */\n  import Router, {push} from \"svelte-spa-router\";\n  \n  import PageHome from \"./routes/Home.svelte\";\n  import PageAbout from \"./routes/About.svelte\";\n\n  function handleAction(action) {\n\tpush(`/${action}`)\n  }\n\n  const routes = {\n\t\"/\": PageHome,\n\t\"/about\": PageAbout\n  };\n</script>\n\n<style lang=\"scss\">div.mainContainer {\n  min-height: 100%;\n  /* min-height: 100%; */\n  display: flex;\n  flex-direction: column; }\n  div.mainContainer main {\n    flex: 1;\n    text-align: center;\n    max-width: 240px;\n    margin: 0 auto; }\n  div.mainContainer footer {\n    border-top: 1px solid grey; }</style>\n\n<div class=\"mainContainer\">\n  <main>\n    <Router {routes} />\n  </main>\n  <footer>\n    <Menubar on:click={({ detail: action }) => handleAction(action)} />\n  </footer>\n</div>\n",
    "<script>\n  // Usage: <Entry path=\"path\">Name</Entry>\n\n  export let path;\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n</script>\n\n<style lang=\"scss\">span {\n  min-width: 200px;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none; }</style>\n\n<span on:click={() => dispatch('click', path)}><slot /></span>\n",
    "<script>\n  import Entry from \"./Entry.svelte\";\n</script>\n\n<style lang=\"scss\">div.menubar {\n  display: flex;\n  flex-direction: row;\n  min-height: 40px; }</style>\n\n<div class=\"menubar\">\n  <Entry path=\"\" on:click>Home</Entry>\n  <Entry path=\"about\" on:click>About</Entry>\n</div>\n",
    "<script>\n  export let hour = 0;\n  export let minute = 0;\n  export let second = 0;\n  export let frame = 0;\n\n  const pad = (i) => i.toString().padStart(2, \"0\");\n</script>\n\n<style>\n  span {\n    /* font-family: 'monospace'; */\n    font-size: 4em;\n  }</style>\n<span>\n  {pad(hour)}:{pad(minute)}:{pad(second)}:{pad(frame)}\n</span>\n"
  ],
  "names": [],
  "mappings": "AAmBmB,GAAG,cAAc,4BAAC,CAAC,AACpC,UAAU,CAAE,IAAI,CAEhB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AAAE,CAAC,AACzB,GAAG,4BAAc,CAAC,IAAI,cAAC,CAAC,AACtB,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAAE,CAAC,AACnB,GAAG,4BAAc,CAAC,MAAM,cAAC,CAAC,AACxB,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAAE,CAAC;ACrBd,IAAI,eAAC,CAAC,AACvB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,WAAW,CACpB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,mBAAmB,CAAE,IAAI,CACtB,gBAAgB,CAAE,IAAI,CACrB,eAAe,CAAE,IAAI,CACjB,WAAW,CAAE,IAAI,AAAE,CAAC;ACdX,GAAG,QAAQ,eAAC,CAAC,AAC9B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,UAAU,CAAE,IAAI,AAAE,CAAC;ACGnB,IAAI,cAAC,CAAC,AAEJ,SAAS,CAAE,GAAG,AAChB,CAAC"
}